{"ast":null,"code":"import _slicedToArray from \"D:\\\\React\\\\student\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\React\\\\student\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; //function based component and class based component difference is -->state\n//function based component are stateles\n//class based component are stateful\n//React Hooks\n// technique to use stateful behaviour in function based components\n//useState Hook\n//Returns a stateful value, and a function to update it.\n\nfunction MyCalculatorWithHook(props) {\n  var _useState = useState(props.a),\n      _useState2 = _slicedToArray(_useState, 2),\n      first = _useState2[0],\n      setFirst = _useState2[1];\n\n  var _useState3 = useState(props.b),\n      _useState4 = _slicedToArray(_useState3, 2),\n      second = _useState4[0],\n      setSecond = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      result = _useState6[0],\n      setResult = _useState6[1];\n\n  var handleResult = function handleResult() {\n    setResult(parseInt(first) + parseInt(second));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Addition od \", first, \" and \", second, \" is \", result), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Addition\"));\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(MyCalculatorWithHook, {\n  a: \"10\",\n  b: \"20\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["D:/React/student/src/index.js"],"names":["React","useState","ReactDOM","MyCalculatorWithHook","props","a","first","setFirst","b","second","setSecond","result","setResult","handleResult","parseInt","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,SAASC,oBAAT,CAA8BC,KAA9B,EAAoC;AAAA,kBAEVH,QAAQ,CAACG,KAAK,CAACC,CAAP,CAFE;AAAA;AAAA,MAE5BC,KAF4B;AAAA,MAEtBC,QAFsB;;AAAA,mBAGRN,QAAQ,CAACG,KAAK,CAACI,CAAP,CAHA;AAAA;AAAA,MAG5BC,MAH4B;AAAA,MAGrBC,SAHqB;;AAAA,mBAIRT,QAAQ,CAAC,CAAD,CAJA;AAAA;AAAA,MAI5BU,MAJ4B;AAAA,MAIrBC,SAJqB;;AAMlC,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAK;AACxBD,IAAAA,SAAS,CAACE,QAAQ,CAACR,KAAD,CAAR,GAAgBQ,QAAQ,CAACL,MAAD,CAAzB,CAAT;AACD,GAFD;;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBH,KAAhB,WAA4BG,MAA5B,UAAwCE,MAAxC,CADF,eAEE;AAAQ,IAAA,OAAO,EAAEE,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF;AAOD;;AAEDX,QAAQ,CAACa,MAAT,eACE,oBAAC,oBAAD;AAAsB,EAAA,CAAC,EAAC,IAAxB;AAA6B,EAAA,CAAC,EAAC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEAC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFA","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n//function based component and class based component difference is -->state\n//function based component are stateles\n//class based component are stateful\n\n//React Hooks\n// technique to use stateful behaviour in function based components\n//useState Hook\n//Returns a stateful value, and a function to update it.\n\nfunction MyCalculatorWithHook(props){\n\n  const[first,setFirst] = useState(props.a);\n  const[second,setSecond] = useState(props.b);\n  const[result,setResult] = useState(0);\n\n  const handleResult = () =>{\n    setResult(parseInt(first)+parseInt(second));\n  }\n\n  return(\n    <div>\n      <p>Addition od {first} and {second} is {result}</p>\n      <button onClick={handleResult}>Addition</button>\n    </div>\n  );\n\n}\n\nReactDOM.render(  \n  <MyCalculatorWithHook a=\"10\" b=\"20\" /> ,\ndocument.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}