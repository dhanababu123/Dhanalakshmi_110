{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\student\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MySwitch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOn: true\n    };\n    this.myHandler = this.myHandler.bind(this);\n  }\n\n  myHandler() {\n    //how do we change the state\n    //this.state.isOn = false;\n    this.setState(i => ({\n      isOn: !i.isOn\n    }));\n  }\n\n  render() {\n    const output = this.state.isOn;\n    console.log(output);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"This is result \", output.toString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.myHandler,\n        children: this.state.isOn ? 'ON' : 'OFF'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(MySwitch, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 34,\n  columnNumber: 3\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["D:/React/student/src/index.js"],"names":["React","ReactDOM","MySwitch","Component","constructor","props","state","isOn","myHandler","bind","setState","i","render","output","console","log","toString","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;;;AAEA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAsC;AAEpCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAG;AAAR,KAAb;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACD;;AAEDD,EAAAA,SAAS,GAAE;AACT;AACA;AACA,SAAKE,QAAL,CAAeC,CAAC,KACd;AAACJ,MAAAA,IAAI,EAAE,CAACI,CAAC,CAACJ;AAAV,KADc,CAAhB;AAGD;;AAEDK,EAAAA,MAAM,GAAE;AACN,UAAMC,MAAM,GAAG,KAAKP,KAAL,CAAWC,IAA1B;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,wBACE;AAAA,8BACA;AAAA,sCAAoBA,MAAM,CAACG,QAAP,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAQ,QAAA,OAAO,EAAE,KAAKR,SAAtB;AAAA,kBAAkC,KAAKF,KAAL,CAAWC,IAAX,GAAkB,IAAlB,GAAuB;AAAzD;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAzBmC;;AA4BtCN,QAAQ,CAACW,MAAT,eACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,QADF,EAEAK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass MySwitch extends React.Component{\n\n  constructor(props){\n    super(props);  \n    this.state = {isOn : true};    \n    this.myHandler = this.myHandler.bind(this);\n  }\n\n  myHandler(){\n    //how do we change the state\n    //this.state.isOn = false;\n    this.setState( i => (\n      {isOn: !i.isOn}\n    ));\n  }\n\n  render(){\n    const output = this.state.isOn;\n    console.log(output);\n    return (\n      <div>\n      <h1>This is result {output.toString()}</h1>\n      <button onClick={this.myHandler}>{this.state.isOn ? 'ON':'OFF'}</button>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(  \n  <MySwitch /> ,\ndocument.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}