{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\student\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; //currency convertor --> shared state\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CurrencyMessage(props) {\n  if (props.rupees >= 1000) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This is too much money.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No This is not too much money.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n}\n\n_c = CurrencyMessage;\nconst unitName = {\n  r: 'rupees',\n  d: 'dollar'\n};\n\nfunction toRupees(dollar) {\n  return dollar * 75;\n}\n\nfunction toDollar(rupees) {\n  return rupees / 75;\n}\n\nclass CurrencyInput extends React.Component {\n  constructor(props) {\n    super(props); //this.state = {currency:''};\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    //this.setState({currency: event.target.value});\n    this.props.onCurrencyChange(event.target.value);\n  }\n\n  render() {\n    //const currency = this.state.currency;\n    const currency = this.props.currency;\n    const unit = this.props.unit;\n    return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: [\"Enter Your Currency in \", unitName[unit], \": \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: currency,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CurrencyMessage, {\n        rupees: currency\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currency: '',\n      unit: 'r'\n    };\n    this.handleDollarChange = this.handleDollarChange.bind(this);\n    this.handleRupeeChange = this.handleRupeeChange.bind(this);\n  }\n\n  handleRupeeChange(currency) {\n    this.setState({\n      unit: 'r',\n      currency\n    });\n  }\n\n  handleDollarChange(currency) {\n    this.setState({\n      unit: 'd',\n      currency\n    });\n  }\n\n  render() {\n    const currency = this.state.currency;\n    const unit = this.state.unit;\n    const rupees = unit === 'd' ? toRupees(currency) : currency;\n    const dollar = unit === 'r' ? toDollar(currency) : currency;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CurrencyInput, {\n        unit: \"r\",\n        currency: rupees,\n        onCurrencyChange: this.handleRupeeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CurrencyInput, {\n        unit: \"d\",\n        currency: dollar,\n        onCurrencyChange: this.handleDollarChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Calculator, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 86,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencyMessage\");","map":{"version":3,"sources":["D:/React/student/src/index.js"],"names":["React","ReactDOM","CurrencyMessage","props","rupees","unitName","r","d","toRupees","dollar","toDollar","CurrencyInput","Component","constructor","handleChange","bind","event","onCurrencyChange","target","value","render","currency","unit","Calculator","state","handleDollarChange","handleRupeeChange","setState","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n//currency convertor --> shared state\n\nfunction CurrencyMessage(props){\n  if(props.rupees >= 1000){\n    return <p>This is too much money.</p>\n  }\n  return <p>No This is not too much money.</p>\n}\n\nconst unitName = {\n  r:'rupees',\n  d:'dollar'\n};\n\nfunction toRupees(dollar){\n  return (dollar*75);\n}\n\nfunction toDollar(rupees){\n  return (rupees/75);\n}\n\nclass CurrencyInput extends React.Component{\n  constructor(props){\n    super(props);\n    //this.state = {currency:''};\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event){\n    //this.setState({currency: event.target.value});\n    this.props.onCurrencyChange(event.target.value);\n  }\n\n  render(){\n    //const currency = this.state.currency;\n    const currency = this.props.currency;\n    const unit = this.props.unit;\n\n    return(\n      <fieldset>\n        <legend>Enter Your Currency in {unitName[unit]}: </legend>\n        <input value={currency} onChange={this.handleChange}></input>\n        <CurrencyMessage rupees={currency}/>\n      </fieldset>\n    );\n  }\n}\n\nclass Calculator extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {currency:'',unit:'r'};\n    this.handleDollarChange = this.handleDollarChange.bind(this);\n    this.handleRupeeChange = this.handleRupeeChange.bind(this);\n  }\n\n  handleRupeeChange(currency){\n    this.setState({unit:'r',currency});\n  }\n\n  handleDollarChange(currency){\n    this.setState({unit:'d',currency});\n  }\n\n  render(){\n    const currency = this.state.currency;\n    const unit = this.state.unit;\n    const rupees = unit === 'd' ? toRupees(currency):currency;\n    const dollar = unit === 'r' ? toDollar(currency):currency;\n    return(\n      <div>\n        <CurrencyInput unit='r' currency={rupees} onCurrencyChange = {this.handleRupeeChange}/>\n        <CurrencyInput unit='d' currency={dollar} onCurrencyChange = {this.handleDollarChange}/>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(  \n  <Calculator /> ,\ndocument.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}