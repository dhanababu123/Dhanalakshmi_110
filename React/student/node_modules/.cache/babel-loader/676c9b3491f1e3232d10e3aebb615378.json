{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\student\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; //working with lists in react\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst posts = [{\n  id: 101,\n  title: \"First Post\",\n  content: \"This is content from first post.\"\n}, {\n  id: 102,\n  title: \"Second Post\",\n  content: \"This is content from second post.\"\n}]; //you should always have key while working with list items otherwise error in production strict mode\n\nfunction Blog(props) {\n  const sideBar = /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: props.posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: post.title\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n\n  const content = props.posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this)]\n  }, post.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [sideBar, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Blog;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Blog, {\n  posts: posts\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 43,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"sources":["D:/React/student/src/index.js"],"names":["React","ReactDOM","posts","id","title","content","Blog","props","sideBar","map","post","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP,C,CAEA;;;AAEA,MAAMC,KAAK,GAAG,CACZ;AAACC,EAAAA,EAAE,EAAC,GAAJ;AAAQC,EAAAA,KAAK,EAAC,YAAd;AAA2BC,EAAAA,OAAO,EAAC;AAAnC,CADY,EAEZ;AAACF,EAAAA,EAAE,EAAC,GAAJ;AAAQC,EAAAA,KAAK,EAAC,aAAd;AAA4BC,EAAAA,OAAO,EAAC;AAApC,CAFY,CAAd,C,CAKA;;AACA,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAClB,QAAMC,OAAO,gBACX;AAAA,cACGD,KAAK,CAACL,KAAN,CAAYO,GAAZ,CACEC,IAAD,iBACA;AAAA,gBACGA,IAAI,CAACN;AADR,OAASM,IAAI,CAACP,EAAd;AAAA;AAAA;AAAA;AAAA,YAFD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;;AAWA,QAAME,OAAO,GAAGE,KAAK,CAACL,KAAN,CAAYO,GAAZ,CACbC,IAAD,iBACI;AAAA,4BACE;AAAA,gBAAKA,IAAI,CAACN;AAAV;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAIM,IAAI,CAACL;AAAT;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,KAAUK,IAAI,CAACP,EAAf;AAAA;AAAA;AAAA;AAAA,UAFU,CAAhB;AAQA,sBACE;AAAA,eACGK,OADH,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGH,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;KA3BQC,I;AA6BTL,QAAQ,CAACU,MAAT,eACE,QAAC,IAAD;AAAM,EAAA,KAAK,EAAET;AAAb;AAAA;AAAA;AAAA;AAAA,QADF,EAEAU,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n//working with lists in react\n\nconst posts = [\n  {id:101,title:\"First Post\",content:\"This is content from first post.\"},\n  {id:102,title:\"Second Post\",content:\"This is content from second post.\"}\n]\n\n//you should always have key while working with list items otherwise error in production strict mode\nfunction Blog(props){\n  const sideBar = (\n    <ul>\n      {props.posts.map(\n        (post) =>\n        <li key={post.id}>\n          {post.title}\n        </li>\n      )}\n    </ul>\n  );\n\n  const content = props.posts.map(\n    (post) =>\n        <div key={post.id}>\n          <h3>{post.title}</h3>\n          <p>{post.content}</p>\n        </div>      \n  );\n\n  return(\n    <div>\n      {sideBar}\n      <hr />\n      {content}\n    </div>\n  );\n}\n\nReactDOM.render(  \n  <Blog posts={posts}/> ,\ndocument.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}