{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\student\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n\n  // States for registration\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState(''); // States for checking the errors\n\n  const [submitted, setSubmitted] = useState(false);\n  const [error, setError] = useState(false); // Handling the name change\n\n  const handleName = e => {\n    setName(e.target.value);\n    setSubmitted(false);\n  }; // Handling the email change\n\n\n  const handleEmail = e => {\n    setEmail(e.target.value);\n    setSubmitted(false);\n  }; // Handling the password change\n\n\n  const handlePassword = e => {\n    setPassword(e.target.value);\n    setSubmitted(false);\n  }; // Handling the form submission\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name === '' || email === '' || password === '') {\n      setError(true);\n    } else {\n      setSubmitted(true);\n      setError(false);\n    }\n  }; // Showing success message\n\n\n  const successMessage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success\",\n      style: {\n        display: submitted ? '' : 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"User \", name, \" successfully registered!!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 1\n    }, this);\n  }; // Showing error message if error is true\n\n\n  const errorMessage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      style: {\n        display: error ? '' : 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Please enter all the fields\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 1\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"User Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: [errorMessage(), successMessage()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleName,\n        className: \"input\",\n        value: name,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleEmail,\n        className: \"input\",\n        value: email,\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handlePassword,\n        className: \"input\",\n        value: password,\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"btn\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 1\n  }, this);\n}\n\n_s(Form, \"CkEWUu6kiVYszNfmZ6Lg00C0uz0=\");\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["D:/React/student/src/index.js"],"names":["useState","Form","name","setName","email","setEmail","password","setPassword","submitted","setSubmitted","error","setError","handleName","e","target","value","handleEmail","handlePassword","handleSubmit","preventDefault","successMessage","display","errorMessage"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nexport default function Form() {\n\n// States for registration\nconst [name, setName] = useState('');\nconst [email, setEmail] = useState('');\nconst [password, setPassword] = useState('');\n\n// States for checking the errors\nconst [submitted, setSubmitted] = useState(false);\nconst [error, setError] = useState(false);\n\n// Handling the name change\nconst handleName = (e) => {\nsetName(e.target.value);\nsetSubmitted(false);\n};\n\n// Handling the email change\nconst handleEmail = (e) => {\nsetEmail(e.target.value);\nsetSubmitted(false);\n};\n\n// Handling the password change\nconst handlePassword = (e) => {\nsetPassword(e.target.value);\nsetSubmitted(false);\n};\n\n// Handling the form submission\nconst handleSubmit = (e) => {\ne.preventDefault();\nif (name === '' || email === '' || password === '') {\nsetError(true);\n} else {\nsetSubmitted(true);\nsetError(false);\n}\n};\n\n// Showing success message\nconst successMessage = () => {\nreturn (\n<div\nclassName=\"success\"\nstyle={{\ndisplay: submitted ? '' : 'none',\n}}>\n<h1>User {name} successfully registered!!</h1>\n</div>\n);\n};\n\n// Showing error message if error is true\nconst errorMessage = () => {\nreturn (\n<div\nclassName=\"error\"\nstyle={{\ndisplay: error ? '' : 'none',\n}}>\n<h1>Please enter all the fields</h1>\n</div>\n);\n};\n\nreturn (\n<div className=\"form\">\n<div>\n<h1>User Registration</h1>\n</div>\n\n{/* Calling to the methods */}\n<div className=\"messages\">\n{errorMessage()}\n{successMessage()}\n</div>\n\n<form>\n{/* Labels and inputs for form data */}\n<label className=\"label\">Name</label>\n<input onChange={handleName} className=\"input\"\nvalue={name} type=\"text\" />\n\n<label className=\"label\">Email</label>\n<input onChange={handleEmail} className=\"input\"\nvalue={email} type=\"email\" />\n\n<label className=\"label\">Password</label>\n<input onChange={handlePassword} className=\"input\"\nvalue={password} type=\"password\" />\n\n<button onClick={handleSubmit} className=\"btn\" type=\"submit\">\nSubmit\n</button>\n</form>\n</div>\n);\n}\n\n"]},"metadata":{},"sourceType":"module"}