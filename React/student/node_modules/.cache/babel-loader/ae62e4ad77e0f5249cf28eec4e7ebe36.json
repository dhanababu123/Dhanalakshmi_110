{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\student\\\\src\\\\index.js\";\nimport ReactDOM from 'react-dom';\nimport './index.css'; //working with lists in react\n//nested components\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst posts = [{\n  id: 101,\n  title: \"First Post\",\n  content: \"This is content from first post.\"\n}, {\n  id: 102,\n  title: \"Second Post\",\n  content: \"This is content from second post.\"\n}];\n\nfunction MyHello(props) {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Hi this is MyHello.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this);\n}\n\n_c = MyHello;\n\nfunction YourHello(props) {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Hi this is YourHello.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n} //you should always have key while working with list items otherwise error in production strict mode\n\n\n_c2 = YourHello;\n\nfunction Blog(props) {\n  const sideBar = /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: props.posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: post.title\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n\n  function SayHello(props) {\n    const display = props.isTrue;\n    console.log(display);\n    const content = props.posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this));\n\n    if (display) {\n      return /*#__PURE__*/_jsxDEV(MyHello, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 12\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(YourHello, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 12\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [sideBar, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this);\n  }\n}\n\n_c3 = Blog;\nReactDOM.render( /*#__PURE__*/_jsxDEV(SayHello, {\n  isTrue: true\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 59,\n  columnNumber: 3\n}, this), /*#__PURE__*/_jsxDEV(Blog, {\n  posts: posts\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 60,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MyHello\");\n$RefreshReg$(_c2, \"YourHello\");\n$RefreshReg$(_c3, \"Blog\");","map":{"version":3,"sources":["D:/React/student/src/index.js"],"names":["ReactDOM","posts","id","title","content","MyHello","props","YourHello","Blog","sideBar","map","post","SayHello","display","isTrue","console","log","render","document","getElementById"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP,C,CAEA;AAEA;;;AACA,MAAMC,KAAK,GAAG,CACZ;AAACC,EAAAA,EAAE,EAAC,GAAJ;AAAQC,EAAAA,KAAK,EAAC,YAAd;AAA2BC,EAAAA,OAAO,EAAC;AAAnC,CADY,EAEZ;AAACF,EAAAA,EAAE,EAAC,GAAJ;AAAQC,EAAAA,KAAK,EAAC,aAAd;AAA4BC,EAAAA,OAAO,EAAC;AAApC,CAFY,CAAd;;AAKA,SAASC,OAAT,CAAiBC,KAAjB,EAAuB;AACrB,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KAFQD,O;;AAIT,SAASE,SAAT,CAAmBD,KAAnB,EAAyB;AACvB,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CACD;;;MAHSC,S;;AAIT,SAASC,IAAT,CAAcF,KAAd,EAAoB;AAClB,QAAMG,OAAO,gBACX;AAAA,cACGH,KAAK,CAACL,KAAN,CAAYS,GAAZ,CACEC,IAAD,iBACA;AAAA,gBACGA,IAAI,CAACR;AADR,OAASQ,IAAI,CAACT,EAAd;AAAA;AAAA;AAAA;AAAA,YAFD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;;AAWF,WAASU,QAAT,CAAkBN,KAAlB,EAAwB;AACtB,UAAMO,OAAO,GAAGP,KAAK,CAACQ,MAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,UAAMT,OAAO,GAAGE,KAAK,CAACL,KAAN,CAAYS,GAAZ,CACbC,IAAD,iBACI;AAAA,8BACE;AAAA,kBAAKA,IAAI,CAACR;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIQ,IAAI,CAACP;AAAT;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAAUO,IAAI,CAACT,EAAf;AAAA;AAAA;AAAA;AAAA,YAFU,CAAhB;;AAQA,QAAGW,OAAH,EAAW;AACT,0BAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEK;AACH,0BAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,wBACE;AAAA,iBACGJ,OADH,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGL,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;AACA;;MApCQI,I;AAsCTR,QAAQ,CAACiB,MAAT,eACE,QAAC,QAAD;AAAU,EAAA,MAAM,EAAE;AAAlB;AAAA;AAAA;AAAA;AAAA,QADF,eAEE,QAAC,IAAD;AAAM,EAAA,KAAK,EAAEhB;AAAb;AAAA;AAAA;AAAA;AAAA,QAFF,EAGAiB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAHA","sourcesContent":["import ReactDOM from 'react-dom';\nimport './index.css';\n\n//working with lists in react\n\n//nested components\nconst posts = [\n  {id:101,title:\"First Post\",content:\"This is content from first post.\"},\n  {id:102,title:\"Second Post\",content:\"This is content from second post.\"}\n]\n\nfunction MyHello(props){\n  return <h1>Hi this is MyHello.</h1>\n}\n\nfunction YourHello(props){\n  return <h1>Hi this is YourHello.</h1>\n}\n//you should always have key while working with list items otherwise error in production strict mode\nfunction Blog(props){\n  const sideBar = (\n    <ul>\n      {props.posts.map(\n        (post) =>\n        <li key={post.id}>\n          {post.title}\n        </li>\n      )}\n    </ul>\n  );\n\nfunction SayHello(props){\n  const display = props.isTrue;\n  console.log(display);\n  const content = props.posts.map(\n    (post) =>\n        <div key={post.id}>\n          <h3>{post.title}</h3>\n          <p>{post.content}</p>\n        </div>      \n  );\n\n  if(display){\n    return <MyHello />\n  }else{\n    return <YourHello />\n  }\n  return(\n    <div>\n      {sideBar}\n      <hr />\n      {content}\n    </div>\n  );\n}\n}\n\nReactDOM.render(  \n  <SayHello isTrue={true} /> ,\n  <Blog posts={posts}/> ,\ndocument.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}